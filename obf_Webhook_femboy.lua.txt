--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bh,bh,bh)local bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=120,71,43,18,57,94,59,47,60,58,76,92,61,42,73,89,12,54,98,35,95,41,61,84,76,82,87,77,62,39,81,92,40,72,18,41,32,69,91,24,14,90,15,61,94,20,56,53,62,47 while bh~=75 do if bi>=779 then if bi<=1125 then if bi<=936 then if bi>=853 then if bi>=889 then if bi>895 then bi=971 for cw=1,31 do ca[cw]=bq bq=(bq*2)end else bi=936 bq=2 end else bi=889 ca={[0]=1}end else if bi<824 then cd=''bi=827 else cj=(2^52)bi=853 end end else if bi>=1047 then if bi<=1047 then bi=1095 bx=1 else if bi>1099 then cf=function()local cw cw=bz(bs,bx,bx)bx=(bx+1);return cw;end bi=1162 else bi=1125 cg=function()local cw,cx,cy,cz do cy,cz,cw,cx=bz(bs,bx,(bx+3))end bx=(bx+4);return((cx*16777216)+(cw*65536)+(cz*256)+cy);end end end else if bi<=971 then ci=function(cw,cx,cy,cz)local cz,da,db=50,58,18,49,98,61,49,82,51,39,85,24,54,18 while cz~=27 do if da<=145 then if da>=97 then if da>102 then da=166 db=((cx/ca[cw])%ca[cy])else db=nil da=145 end else db=nil da=97 end else if da>=181 then if da>183 then cz=27;else da=230 return db end else da=181 do db=(db-db%1)end end end end end bi=1002 else if bi<1014 then do cl=(bit_lib and bit_lib.bxor or function(cw,cx)cw=cw%(2^32)cx=cx%(2^32)local cy,cz=0,1 while cw>0 and cx>0 do local da,db=cw%16,cx%16 cy=cy+bj[da+1][db+1]*cz cw=(cw-da)/16 cx=(cx-db)/16 cz=cz*16 end cy=cy+cw*cz+cx*cz return cy end)end bi=1021 else bi=1047 by=function(cw,cx,cy,cz,cz,cz,cz)local cz cz=((cw/2^(cx-1))%2^((cy-1)-(cx-1)+1))return(cz-cz%1);end end end end end else if bi<=1285 then if bi<=1192 then if bi>1166 then bi=1226 ck=function()local cw,cx,cy,cz,da,db,dc,dd=75,63,87,35,67,84,16,23,46,34,67,72,55,91,39,83,58 while cw~=31 do if cx>=220 then if cx<=291 then if cx>=250 then if cx<283 then cx=291 da=(ci(0,cz,f)*m+dc)else cx=328 do db=1 end end else do dd=ci(20,cz,11)end cx=250 end else if cx>=346 then if cx<391 then cx=395 return(cy*(2^(dd-1023))*(da/cj+db))else cw=31;end else if 0==dd then if not(da==0)then dd=1 db=0 else return(cy*0)end elseif not(dd==2047)then else if not(da~=0)then do return(cy*(0/0))end else return(cy*(1/0))end end cx=346 end end else if cx>=105 then if cx<=105 then cx=148 cz=cg()else if cx<188 then if((dc==0 and cz==0))then return 0 end cx=195 else cy=((-1)^ci(31,cz,1))cx=220 end end else if cx>70 then dc=cg()cx=105 else cy,cz,da,db,dc,dd=nil cx=83 end end end end end else bi=1192 cu=function()local f,m m,f=bz(bs,bx,(bx+2))do bx=(bx+2);end return((f*256)+m);end end else if bi>=1257 then if bi<1280 then bi=1285 ce=function(...)return{...},cr('#',...)end else bi=1319 do cn={}end end else bk=function(f,f)local f,m,cw,cx=60,41,96,56,96,66,97,75,86,18,26,36,73 while f~=33 do if m<=112 then if m>=90 then if m>97 then cw=bs:sub(bx,(bx+cx-1))m=136 else m=112 cx=cg()end else cw,cx=nil m=90 end else if m>=174 then if m>181 then f=33;else m=189 return cw;end else m=174 bx=(bx+cx);end end end end bi=1257 end end else if bi<=1377 then if bi<=1319 then ct=function(f,m,m)local m,cw,cx,cy,cz,da,db,dc=59,58,26,87,44,68,72,12,84,35,58,95,55,54,85,77,27,31,59,82,89,37,82,18 while m~=36 do if cw>=328 then if cw>=452 then if cw>=517 then if cw<=517 then cw=561 da[194]=cf();else if cw<586 then cw=594 return da;else break end end else if cw<494 then cw=496 for m=1,db do local dd,de,df,dg=82,60,64,82,31,31,16,67,71,13,73,70,18,18,29,10 while dd~=35 do if de<=114 then if de>=94 then if de>101 then de=163 df=nil else dg=cf()de=114 end else de=94 df,dg=nil end else if de<=163 then de=182 if(4==dg)then df=(not(cf()==0));elseif(not(dg~=bg))then do df=ck();end elseif(1==dg)then do df=bk();end elseif(0==dg)then df=f[bk()];end;else if de>185 then dd=35;else de=209 cz[m]=df;end end end end end else da[91]=cz cw=517 end end else if cw<=372 then if cw>337 then cw=387 da[68]=cy;else for f=1,cg()do cy[f-1]=ct();end cw=372 end else if cw<418 then db=cg()cw=426 else cw=452 cz={}end end end else if cw>=193 then if cw<=224 then if cw>200 then cw=259 for f=(#cn+1),(#cn+cx)do local m,bg,dd,de,df=67,73,24,35,73,47,25,32,83,51,57,28,38,43,39,66,91,23,71,49,54,20 while m~=46 do if bg>=343 then if bg<=441 then if bg>=415 then if bg<436 then bg=441 df[163]=by(de,21,29);else df[186]=by(dd,12,33);bg=466 end else if bg<377 then df[138]=by(de,3,11);bg=385 else bg=415 df[199]=by(de,12,20);end end else if bg<=502 then if bg<495 then bg=502 do df[170]=-df[138]end else df[16]=-df[163]bg=551 end else if bg>554 then m=46;else bg=574 cn[f]=df;end end end else if bg<=174 then if bg<=106 then if bg>81 then bg=132 do df={}end else bg=106 dd,de,df=nil end else if bg<169 then bg=174 df[6]=cf();else de=cg()bg=207 end end else if bg>=277 then if bg>282 then df[161]=by(dd,1,11);bg=343 else bg=319 df[109]=by(de,1,2);end else if bg>216 then bg=277 df[135]=cf();else dd=cg()bg=241 end end end end end end else cx=cg()cw=224 end else if cw>261 then cw=328 da[84]=dc;else cw=279 for f=1,cg()do local m,bg,dd,de,df,dg=61,47,57,98,15,26,28,70,19,90,89,66,43,94,33,63,42,11,98,48,25,15,84,85,88,36 while m~=51 do if bg<=251 then if bg>=154 then if bg>=208 then if bg>=224 then if bg<249 then bg=251 do dd=by(df,1,2)end else dg[109]=dd bg=271 end else bg=224 de=cg()end else if bg<167 then bg=170 if not(cf()~=1)then for dh=1,cf()do do dg[167][dh]={cf()==0,cg()}end end end else df=cg()bg=208 end end else if bg>=108 then if bg>115 then dg[167]={};bg=154 else bg=126 do dg[6]=cf();end end else if bg>54 then dg={{},nil,nil}bg=108 else dd,de,df,dg=nil bg=72 end end end else if bg>=404 then if bg>=447 then if bg<=447 then do dg[16]=-dg[bc]end bg=489 else if bg>491 then m=51;else bg=524 dc[f]=dg;end end else if bg<413 then dg[135]=by(df,12,20);bg=421 else dg[170]=-dg[138]bg=447 end end else if bg<=320 then if bg<313 then bg=320 do dg[161]=by(de,1,11);end else bg=357 dg[138]=by(df,3,11);end else if bg>364 then bg=404 dg[163]=by(df,21,29);else dg[186]=by(de,12,33);bg=387 end end end end end end end end else if cw>=124 then if cw>132 then cw=193 da={}else cy={}cw=160 end else if cw<87 then cw=91 cx,cy,cz,da,db,dc=nil else cw=124 do dc={}end end end end end end end bi=1353 else if bi>1362 then bi=1423 do bm={}end else cv={}bi=1377 end end else if bi<=1423 then cp=function(f,m,bc,bg,bg)local bg,cw,cx,cy,cz cy=f[84]cx=cv bg=f[194]cw=f[68]cz=f[91]do return function(...)local f,cx,da,db,dc,dd,de,df,dg df=1 de=-1 dc=-1 db={}da={...}dg=(cr('#',...)-1)dd={}f={}for dc=0,dg do do if(not(dc<bg))then db[(dc-bg)]=da[(dc+1)];else f[dc]=da[(dc+1)];end;end end;do cx=(dg-bg+h)end while true do local h,cx,dc,dh,di,dj,dk,dl,dm,dn dh=cy[df]do dk=dh[161]end h=dh[p]do dl=dh[138]end dm=dh[199]di=dh[163]dn=dh[135]cx=dh[170]dc=dh[186]dj=dh[16]do if not(dk<48)then do if not(dk>71)then if not(dh[161]<60)then if not(dk<66)then if not(dk>68)then if not(dk<67)then if(dk<68)then f[dl]=f[dc]else f={};do for h=0,dg do if(h<bg)then f[h]=da[(h+1)];else do break end end;end;end end else do do return f[dl]end end end else if not(dk>69)then local h,p do h=dc end p=f[h]for bg=(h+1),di do p=(p..f[bg]);end;f[dl]=p;else if(dk>70)then f[dl]=(f[dc]%cz[di]);else end end end else if not(dk>62)then do if not(dk<61)then if(dk<62)then local h,p,bg p=dl bg=f[p]do h=f[(p+2)]end do if((h>0))then if((bg>f[p+1]))then df=dc;else f[(p+3)]=bg;end elseif((bg<f[p+1]))then do df=dc;end else f[(p+3)]=bg;end end else f[dl]=-f[dc];end else do f[dl]=#f[dc];end end end else do if not(dk>63)then m[dc]=f[dl];else if not(dk~=64)then f[dl]=f[dc];else do return f[cx][dn]end end end end end end else if not(dk>53)then if not(dk>50)then if not(dk<49)then if(dk<50)then f[dl]=(f[dc]%f[di]);else local h h=dl f[h]=f[h](f[h+1]);end else local h,p,bg,da bg=dl da,h=ce(f[bg](f[(bg+1)]))do de=(h+bg-1)end p=0 for h=bg,de do p=(p+1);do f[h]=da[p];end end;end else if not(dh[161]<52)then if 52==dh[s]then f[dl]=(f[dh[186]]/f[di]);else de=dh[dl];end else do f[dh[138]]=(f[dc]+cz[di]);end end end else if not(dk>u)then if not(dk<55)then if(dk<56)then local h,p do h=dl end p=f[dc]do f[(h+1)]=p;end do f[h]=p[f[di]];end else f[dl]=(f[dc]+f[dh[163]]);end else cv[dl]=cv[dm]end else if not(dk>57)then if dl then dl=false;di=dh[186];df=(df-1);else df=(df+dc+di);end else if w==dk then local h,p p=dh[138]do h=f[dc]end do f[(p+1)]=h;end do f[p]=h[cz[di]];end else f[dl]=(0~=dc);df=(df+1);end end end end end else if not(dk>83)then if not(dh[161]>77)then if not(dk>74)then if not(dk>72)then f[dl]=cv[dm]else if(dk>73)then f[dh[dl]]=f else local h h=dl do f[h]=f[h](cb(f,h+1,de));end end end else if not(dh[161]>75)then do f[dl]=nil;end else if(dh[161]<77)then local h,p p=dl h={}do if(#dd>0)then for s=1,#dd do local u u=dd[s]for s=bb,#u do local w,bb,bg bg=u[s]do w=bg[1]end do bb=bg[2]end if(w==f and bb>=0)then h[bb]=w[bb]bg[o]=h end end end end end return cb(f,p,de);else local h h=f[cx][dn]f[cx][dn]=(h..f[di]);end end end else if not(dk>80)then if not(dk>78)then f[dl]=cv[dh[199]]else do if(dk<a)then local a,h,o a=dl o=f[a]h=dc for p=1,h do o[p]=f[(a+p)]end;else do f[dl]=bc[cz[dc]];end end end end else do if not(dk<82)then if(dh[161]>82)then f[dl]=(f[dc]-f[dh[163]]);else bc=f[dh[dh[138]]]end else local a do a=dl end do f[a](f[(a+1)])end end end end end else if not(dk<90)then if not(dk>92)then do if not(dk>90)then do do return f[dl]();end;end else if(dk>91)then do f[dj]();end else f[dl][cz[dc]]=cz[di];end end end else do if not(dk>94)then do if(dk<94)then if((f[dl]<f[di]))then df=dc;end;else local a,h,o a=dl h=f[(a+2)]o=(f[a]+h)f[a]=o;if((h>0))then if(not(o>f[a+1]))then df=dh[bf];f[(a+3)]=o;end elseif(not(o<f[a+1]))then df=dh[186];do f[(a+3)]=o;end end end end else if(dk>95)then do cv[dl]={}end else cv=f end end end end else if not(dk>86)then if not(dh[161]<85)then if not(dh[i]~=85)then f[dl]=(f[dc]*cz[di]);else f[dl][cz[dc]]=f[di];end else f[dl]=m[dh[186]];end else if not(dh[bd]>87)then local a a={}if(#dd>0)then for h=1,#dd do local i i=dd[h]for h=0,#i do local m,o,p o=i[h]m=o[1]p=o[2]while m==f and p>=0 do a[p]=m[p]o[1]=a break end end end end return dk,true,f[(dl+2)];else if(dk<89)then do if(cz[di]~=f[dh[138]])then do df=dc;end end;end else local a,h do a=dl end do h=dc end for i=a,h do f[i]=db[(i-a)];end;end end end end end end end else if not(dk>23)then if not(dk<12)then if not(dk<18)then if not(dh[161]>20)then if not(dh[161]>18)then df=((f[dl]<f[dh[163]])and dc or df)else if(dk<20)then f[dl]=(f[dc]*f[di]);else do for a=dl,dh[186]do f[a]=nil;end;end end end else do if not(dk<22)then if(dk>22)then local a,h a=dl h={}for i=1,#dd do local m do m=dd[i]end do for i=0,#m do local o,p,s do o=m[i]end p=o[1]s=o[2]while p==f and s>=a do h[s]=p[s];o[1]=h;break end end;end end;else df=((cz[dl]<f[di])and dc or df)end else local a a=dh[138]f[a]=f[a](cb(f,a+1,dc));end end end else if not(dk>14)then do if not(dk<13)then if not(dk~=13)then f[dl]=f[dc][cz[di]];elseif((f[dl]>f[dh[v]]))then df=dc;end else if not f[dh[138]]then df=dc;end;end end else do if not(dk>15)then cy[df]={[138]=10,[161]=dk-r,[163]=15,[135]=0,[186]=16};df=(df-1);else if 16==dk then local a,h,i,m h=dh[138]i=((di-1)*q)a=f[h]m=dc for o=l,m do a[(i+o)]=f[(h+o)]end;else f[dl]=cp(cw[dc],nil,bc);end end end end end else if not(dh[161]<6)then if not(dk>8)then if not(dk>6)then if(not(f[dh[138]]<f[di]))then df=dc;end;else do if(dk>7)then else f[dl]=cz[dh[186]]end end end else if not(dh[161]<10)then if not(dh[161]~=10)then df=((cz[dl]~=cz[di])and dc or df)else f[dl]={};end else df=dc;end end else if not(dk>2)then if not(dk>0)then if((cz[dh[138]]<f[di]))then df=dc;end;else if(dk>1)then local a,h,i,l i=dl a={f[i]()}h=di do l=0 end for m=i,h do do l=(l+1);end f[m]=a[l];end else cy[df]={[186]=2,[138]=16,[t]=dh[161]- -49,[163]=2,[135]=0};df=(df-1);end end else if not(dk<4)then if(dk<5)then local a a=dl do return f[a](cb(f,(a+1),dc))end;else df=((f[dl]~=f[di])and dc or df)end else local a,h,i,l i=dl l,h=ce(f[i](cb(f,(i+1),dc)))de=(h+i-1)a=0 for h=i,de do a=(a+1);f[h]=l[a];end;end end end end else if not(dk<36)then if not(dk<42)then if not(dk>44)then if not(dk<43)then if(dh[161]<44)then f[dl]=bc[cz[dh[186]]][cz[di]];else f[dj]=(function()f[dl]=cp(cw[dh[199]],nil,bc);end)end else f[dl][f[dc]]=f[di];end else if not(dk>45)then else if(dk<47)then cv[dl]=f[dm]elseif(f[dh[ba]]~=f[dl])then do df=dc;end end end end else do if not(dk>n)then if not(dk<37)then if not(dk~=37)then f[dl]=(not f[dc]);else do f[dl]=(f[dc]^f[di]);end end else bc[cz[dc]]=f[dl];end else if not(dh[161]>39)then do cv[dl]()end else if(dh[161]<41)then local a,h,i a=dh[138]do h={f[a](cb(f,a+1,dh[186]))}end do i=0 end for l=a,dh[163]do i=(i+1);f[l]=h[i];end else cy[df]=cn[dn];df=dc;end end end end end else if not(dk>29)then if not(dk>26)then if not(dk<25)then do if(dk>25)then do if not f[di]then do f[dl]=f[di];end df=dh[186];end;end else local a,h a,h=ce(...)for h=1,dl do f[(h-1)]=a[h]end end end else f[dl]=f[dh[186]][f[di]];end else if not(dk>27)then cz=cv[dl](cz)else if(dk<y)then do cy[df]={[138]=1,[186]=163,[161]=dk-16,[163]=0,[135]=0};end do df=(df-1);end else if f[dl]then df=dc;end;end end end else if not(dk<33)then do if not(dh[161]<34)then do if not(dk~=34)then cy[df]=cn[dn];do df=dc;end else local a,h,i,l,m do i=dl end a=di l=(i+2)m={f[i](f[i+1],f[l])}for n=1,a do f[(l+n)]=m[n]end h=f[(i+3)]do if h then f[l]=h else df=dc;end;end end end else do f[dj]=(function()do f[dh[138]]=cp(cw[dm],nil,bc);end end)end end end else if not(dk>30)then cy[df]={[135]=0,[161]=dh[161]-9,[163]=2,[138]=3,[186]=5};df=(df-1);else if(dk<32)then local a a=dl do return cb(f,a,(a+dc))end;else f[dl]=(f[dc]/cz[di]);end end end end end end end end do df=(df+1);end end;end;end end bi=1470 else if bi>1477 then bh=75;else bi=1511 return cp(ct(br()),{},br())();end end end end end else if bi>=419 then if bi>=583 then if bi>=677 then if bi<=677 then for a=0,255 do ch[a]=bp(a);end bi=694 else if bi<729 then bs=ccz,function(a,f)return ch[bl(a,16)]end)bi=736 else bj={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,e,j,10,13,b,15,14,},{2,3,0,1,6,7,c,5,10,11,8,x,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,g,0,1,6,7,4,5,},{be,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,d,9,6,7,4,5,k,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil,nil}bi=779 end end else if bi>=629 then if bi>635 then bi=677 ch={}else bl=tonumber bi=653 end else bi=629 cb=(unpack or table.unpack)end end else if bi<=466 then if bi<457 then do cr=select end bi=466 else bi=493 cq=type end else if bi<=493 then bu=(function(a,b,b)if not(cq(a)~='number')then do return true end else return false end end)bi=509 else if bi>517 then bi=583 co=math.floor else bv=math.abs bi=551 end end end end else if bi>=237 then if bi>=325 then if bi>=374 then if bi<384 then bi=389 br=(getfenv or function()return _ENV end)else bw=setmetatable bi=419 end else bi=374 do bt=math.ldexp end end else if bi<=237 then bo=string.rep bi=286 else if bi<305 then bi=309 bn=table.concat else cs=table.insert bi=325 end end end else if bi<=94 then if bi>73 then bi=116 do bz=string.byte end else bi=94 bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=nil end else if bi>=162 then if bi>171 then cc=string.gsub bi=237 else cm=string.sub bi=191 end else bi=162 bp=string.char end end end end end end end)(80,12,4,8,8,20,3,1,161,11,2,1,4294967296,38,1,6,50,8,161,161,56,163,58,9,29,'..',163,0,163,161,11,186,2)